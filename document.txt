الگوریتم های استفاده شده در پروژه 

bloom filter : 

یک ساختار داده احتمالی و کارامد برای بررسی عضویت عناصر در یک مجموعه است .
بدون نیاز به ذخیره سازی مستقیم آن مجموعه این الگوریتم برای صرفه جویی در حافظه و کاهش زمان جستجو طراحی شده و اغلب در سیستم تشخیص تقلب پایگاه های داده و شبکه ها کاربرد دارد 

توضیح کلی الگوریتم 
ابتدا یک آرایه با اندازه ثابت و مقدار دهی صفر ایجاد میکند و سپس برای اضافه کردن یک مقدار 
چندین تابع 
 hash  
مستقل مقدار مورد نظر ره به چندین موقعیت در آرایه نگاشت میکند و در آن موقعیت یک قرار میگیرد

برای بررسی عضویت نیز هنگام بررسی یک مقدار همان توابع هش به کار رفته و بیت های متناظر را بررسی می شوند اگر همه بیت های مربوط مقدار 1 داشته باشند احتمال زیادی وجود دارد که مقدار قبلا اضافه شده باشد و اما اگر حتی یکی از بیت ها مقدار 0 داشته باشد مطمئن هستیم که مقدار در مجموعه وجود ندارد

O(1)


jaccard_similarity :

یک معیار ساده و پرکاربرد برای سنجش شباهت بین دو مجموعه است. این معیار در مسائل مختلفی از جمله تشخیص تقلب، تحلیل داده‌ها، پردازش زبان طبیعی و سیستم‌های توصیه‌گر استفاده می‌شود. در ادامه، تعریف، فرمول و کاربرد آن در تشخیص تقلب را توضیح می‌دهم
میزان شباهت بین دو مجموعه را با مقایسه تعداد عناصر مشترک (اشتراک) به کل عناصر موجود در هر دو مجموعه محاسبه میکند این معیار عددی بین 0 و یک تولید میکند
یک یعنی دو مجموعه کاملا یکسان هستنند 
صفر یعنی هیچ عنصر مشترکی بین دو مجموعه وجود ندارد
در پروژه ای که ما داشتیم این طور از ان بهره بردیم که 
می‌تواند برای مقایسه الگوهای رفتاری، تراکنش‌ها یا داده‌های کاربران استفاده شود. برخی کاربردهای خاص آن عبارت‌اند از:

مقایسه رفتار کاربران
تشخیص تقلب در متون

مزایا 
سادگی و محاسبه سریع 
مناسب برای داده های غیر عددی
مقاوت در داده های گسسته 

معایب 
عدم توجه به وزن یا اهمیت ویژگی ها
حساسیت به اندازه مجموعه ها
عملکرد ضعیف در داده های پیچیده


levenshtein Distance :
(فاصله لِوِنشاین) یک معیار برای سنجش تفاوت بین دو رشته (مثل رشته‌های متنی) است که تعداد عملیات حداقل مورد نیاز برای تبدیل یک رشته به رشته دیگر را محاسبه می‌کند. این عملیات‌ها شامل درج حذف و جایگزینی یک کاراکتر هستنند این الگوریتم در پروژه ها تشخیص تقلب عملکرد خوبی دارد 

تعریف آن را می شود اینطور گفت که بین دو رشته 
s1 , s2 
کمترین تعداد عملیات مورد نیاز برای تبدیل 
s1 to s2 
است
این الگوریتم معمولا با استفاده از برنامه نویسی پویا ساختع میشود
و با استفاده از ماتریس لونشتاین میشود ان را نمایش داد 

کاربرد ان در پروژه ما برای الگوهای مشکوک و یا ناهنجاری های در داده های متنی استفاده میشود
که شباهت بین متون رو به وضوح تشخیص میدهد

مزایا
دقت در مقایسه رشته‌ها: برای شناسایی تغییرات جزئی (مثل اشتباهات تایپی یا دستکاری عمدی) بسیار مناسب است
میتواند وزن های متفاوتی برای هر عملیات تعریف کند
معایب 
زمان اجرای الگوریتم برای رشته های بلند خیلی میتواند کند باشد 
عدم توجه به معنا : فقط کاراکتر هارا مقایسه میکند و معنای رشته ها را در نظر نمیگیرد 
